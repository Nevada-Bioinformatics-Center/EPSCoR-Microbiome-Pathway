/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    A 'blank slate' config file, appropriate for general use. Assumes that all software 
    is installed and available on the PATH. Runs in `local` mode - all jobs will be run 
    on the logged in environment.
----------------------------------------------------------------------------------------
*/

executor {
    name = 'slurm'
    account = 'cpu-s1-inbre-0'
    queueSize = 15     // Max jobs submitted to SLURM at once

}

// Default resource allocations to run the pipeline locally
process {
    executor = 'slurm'
    queue = 'cpu-s1-inbre-0'
    clusterOptions = '--partition=cpu-s1-inbre-0 --account=cpu-s1-inbre-0'


    // Resource specifications by label
    //withLabel: 'low' {
    //    cpus = 2
    //    memory = 16.GB
    //    time = '8h'
    //}

    //withLabel: 'medium' {
    //    cpus = 4
    //    memory = 40.GB
    //    time = '24h'
    //}

    //withLabel: 'high' {
    //    cpus = 8
    //    memory = 50.GB
    //    time = '48h'
    //}

    // Resource specifications by label
    withName: 'KNEADING_DATA' {
        cpus = "$params.kneaddata_threads" // Note: "$params.kneaddata_processes" is set to 1 (Yet to fix this)
        memory = "$params.kneaddata_mem"
    }

    withName: 'TAXONOMIC_PROFILING' {
        cpus = "$params.metaphlan_nproc"
        memory = "$params.metaphlan_mem"
    }

    withName: 'FUNCTIONAL_PROFILING' {
        cpus = "$params.humann_threads"
        memory = "$params.humann_mem"
    }

    withName: 'NORMALIZE_PATHWAY_ABUNDANCE' {
        cpus = "$params.norm_path_cpu"
        memory = "$params.norm_path_mem"
    }

    withName: 'JOIN_PATHWAY_ABUNDANCE' {
        cpus = "$params.join_path_cpu"
        memory = "$params.join_path_mem"
    }

    withName: 'DESCRIPTIVE_PROFILING' {
        cpus = "$params.desc_cpu"
        memory = "$params.desc_mem"
    }

    withName: 'GENERATE_GOTERMS' {
        cpus = "$params.goterm_cpu"
        memory = "$params.goterm_mem"
    }

    withName: 'CONSENSUS_PATHWAY_ANALYSIS' {
        cpus = "$params.cpa_cpu"
        memory = "$params.cpa_mem"
    }


    // Make these processes run sequentially
    withName: GENERATE_GOTERMS              { maxForks = 1 }

}
