/*
 * ==================================================
 * EPSCoR-NASA Microbiome Pipeline configuration file
 * Version: v0.1
 * Author: Kanishka Manna & Hans Vasquez-Gross
 * Date: 2025-04-18
 * ==================================================
 */

/*
 * ---------------- Manifest information --------------- *
 */


/* 
 * ---------------- Define parameters ---------------- *
 */
params {

    // ----- Execution parameters ----- //

    // Global options:
    help = false
    samplesheet = null
    output = "${baseDir}/results"

    // ---------- Process specific parameters ---------- //
    
    // KNEADING_DATA:
    
        /*
            NOTE: Please download the KneadData database by `kneaddata_database` command. 
                    You can also make a custom database.
                    See KneadData GitHub repo (https://github.com/biobakery/kneaddata?tab=readme-ov-file) 
                    for more information.
         */
    kneaddata_db = null
    
    // Options: NexteraPE, TruSeq2, TruSeq3, none
    kneaddata_sequencer_source = "NexteraPE" 

    // Resource Parameters for KNEADING_DATA:
        /* 
        NOTE: For total resources used for 1 given kneaddata sample run, is "kneaddata_threads x kneaddata_processes".
                In the default case below 4 x 2 = 8 total threads
                This is fine for local mode, but if you are running to a cluster, 
                be sure to adjust the cluster settings for "high" to match.
        */
    kneaddata_threads = 4 
    kneaddata_processes = 1
    kneaddata_time = "8h"
    kneaddata_mem = "8 GB"
    kneaddata_extra = ""


    // TAXONOMIC_PROFILING:

        /*
            NOTE: Please download the database by `metaphlan --install --index <INDEX-BUILD> --bowtie2db <DIR>` command
                    
                    You can also download from Segata Lab FTP: 
                    http://cmprod1.cibio.unitn.it/biobakery4/metaphlan_databases/?C=M;O=D
                    
                    For more information, please review MetaPhlan GitHub readme 
                    (https://github.com/biobakery/MetaPhlAn/wiki/MetaPhlAn-4.1)
                
            !!! CAUTION: Please do not download the latest MetaPhlAn database. 
                The BioBakery developers have confirmed that it does not work well with HUMAnN 3.9.
        */
    metaphlan_db = null
        
        // NOTE #1: For available indexes, see Segata Lab FTP: http://cmprod1.cibio.unitn.it/biobakery4/metaphlan_databases/?C=M;O=D
        // NOTE #2: It is recommended that the 'mpa_vJun23' version of the database works well with HUMAnN 3.9
    metaphlan_index = "mpa_vJun23_CHOCOPhlAnSGB_202403"
    
    // Resource Parameters for TAXONOMIC_PROFILING:
    metaphlan_nproc = 4
    metaphlan_time = "8h"
    metaphlan_mem = "16 GB"
    metaphlan_extra = ""


    // Extra taxonomic analysis:
    metaphlan_extra_analysis = false


    // FUNCTIONAL_PROFILING:

        /*
            NOTE: Please download the database for BOTH nucleotide and protein by
                 `humann_databases --download <DATABASE> <BUILD> <DIRECTORY>` command
                    
                For more information, please review HUMAnN GitHub readme 
                    (https://github.com/biobakery/humann?tab=readme-ov-file#5-download-the-databases)
        */
    humann_nucleotide_db = null
    humann_protein_db = null
    humann_pathway_db = "metacyc" // Options: 'metacyc' or 'unipathways'
    
    // Resource Parameters for FUNCTIONAL_PROFILING:
    humann_threads = 4
    humann_time = "8h"
    humann_mem = "16 GB"
    humann_extra = ""


    // Consensus pathway analysis:
    goterm_db = null

    // Resource Parameters for GENERATE_GOTERMS 
    goterm_cpu = 2
    goterm_mem = "16 GB"
    goterm_time = "48h"

    // Resource Parameters for CONSENSUS_PATHWAY_ANALYSIS
    cpa_cpu = 2
    cpa_mem = "16 GB"
    cpa_time = "24h"


    // Descriptive profiling analysis:
    humann_renorm_units = "cpm" // Options: 'relab' (relative abundance), 'cpm' (counts per million)
    
    norm_path_cpu = 2
    norm_path_mem = "16 GB"
    norm_path_time = "2h"

    join_path_cpu = 1
    join_path_mem = "8 GB"
    join_path_time = "2h"

    desc_cpu = 1
    desc_mem = "8 GB"
    desc_time = "2h"



}



/*
 * --------------- Execution profiles for environments --------------- *
 */

profiles {

    // Local-workstation execution profile
    local {

        process.executor = 'local'
        conda.enabled = true
        conda.channels = ['defaults', 'conda-forge', 'bioconda', 'biobakery']
        conda.createTimeout = '20 min'
        
        process {

            withLabel: 'kneaddata_conda'    { conda = "assets/kneaddata.yaml" }
            withLabel: 'metaphlan_conda'    { conda = "assets/metaphlan.yaml" }
            withLabel: 'humann_conda'       { conda = "assets/humann.yaml" }
            withLabel: 'go_term_conda'      { conda = "assets/goterm.yaml" }
            withLabel: 'cpa_conda'          { conda = "assets/cpa.yaml" }
            withLabel: 'desc_conda'         { conda = "assets/desc.yaml" }
            withLabel: 'taxviz_conda'       { conda = "assets/taxviz.yaml" }
            withLabel: 'multiqc_conda'      { conda = "assets/multiqc.yaml" }

        }

        // Load `local.config` when running locally
        includeConfig 'conf/local.config'
    }


    
    // HPC execution profile
    cluster {
        process.executor = 'slurm'
        conda.enabled = true
        conda.channels = ['defaults', 'conda-forge', 'bioconda', 'biobakery']
        conda.createTimeout = '20 min'

        process {

           withLabel: 'kneaddata_conda'     { conda = "assets/kneaddata.yaml" }
           withLabel: 'metaphlan_conda'     { conda = "assets/metaphlan.yaml" }
           withLabel: 'humann_conda'        { conda = "assets/humann.yaml" }
           withLabel: 'go_term_conda'       { conda = "assets/goterm.yaml" }
           withLabel: 'cpa_conda'           { conda = "assets/cpa.yaml" }
           withLabel: 'desc_conda'          { conda = "assets/desc.yaml" }
           withLabel: 'multiqc_conda'       { conda = "assets/multiqc.yaml" }
        }

        // Load `cluster.config` when running on HPC
        includeConfig 'conf/cluster.config'
    }



     Local execution profile using containers
    cluster_containers {
        process.executor = 'slurm'
        docker.enabled = true
        docker.runOptions = '--memory=32G -u \$(id -u):\$(id -g)'

        process {
            withLabel: 'kneaddata_docker' {
                container = "community.wave.seqera.io/library/fastqc_kneaddata:292d283c4c7b5157"
            }

            withLabel: 'metaphlan_docker' {
                container = "community.wave.seqera.io/library/metaphlan:4.2.2--644dc6928ffa70c6"
            }

            withLabel: 'humann_docker' {
                container = "community.wave.seqera.io/library/humann:3.9--b616b2952dd13a24"
            }

            withLabel: 'go_term_docker' {
                container = "docker.io/kmanna123/goterm:latest"
            }

            withLabel: 'cpa_docker' {
                container = "docker.io/kmanna123/cpa:latest"
            }

            withLabel: 'multiqc_docker' {
                container = "community.wave.seqera.io/library/multiqc:1.29--e3ef3b42c5f9f0da"
            }
        }

      // Load `base.config` when running locally
      //includeConfig 'conf/base.config'
        includeConfig 'conf/test.config'
    }

}


/*
 * --------------- Global Shell settings --------------- *
 */
// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']


/*
 * --------------- Nextflow related settings --------------- *
 */

// Cleaning up Nextflow's work directory
cleanup = false

// DAG
dag {
    enabled = true
    file = 'dag-epscor_nasa_pipeline.html'
    overwrite = true
}

// Execution report
report {
    enabled = true
    file = 'report-epscor_nasa_pipeline.html'
    overwrite = true
}

// Timeline
timeline {
    enabled = true
    overwrite = true
}

// Workflow
workflow {
    onComplete = {
        """
        Pipeline execution summary
        ---------------------------
        Completed at: ${workflow.complete}
        Duration    : ${workflow.duration}
        Success     : ${workflow.success}
        workDir     : ${workflow.workDir}
        exit status : ${workflow.exitStatus}
        """.stripIndent()
    }
}


/*
=====================
    Help Message    
=====================
*/

params.help_message = """

        ---------------------------------------------------------------
        Usage:
        ---------------------------------------------------------------

        Example command:
            nextflow run main.nf \\
            -profile <local|cluster> \\
            --samplesheet /PATH/to/INPUT.csv \\
            --output /PATH/to/OUTPUT_DIR \\
            --kneaddata_db /PATH/to/KneadData/Database \\
            --metaphlan_db /PATH/to/MetaPhlAn/Database \\
            --humann_nucleotide_db /PATH/to/HUMAnN/Nucleotide/Database \\
            --humann_protein_db /PATH/to/HUMAnN/Protein/Database \\
            --humann_pathway_db <metacyc|unipathways> \\
            --goterm_db /PATH/to/GOterms/Database

        For more options, see below.

        ---------------------------------------------------------------
        Command-line Parameters
        ---------------------------------------------------------------

        Global options:
          -profile <local|cluster>         Execution profile (local or cluster)
          --samplesheet <CSV>              CSV file with sample names and paired-end FASTQ file paths (R1, R2)
          --output <DIR>                   Output directory for results

        KNEADING_DATA:
          --kneaddata_db <DIR>             Path to KneadData database
          --kneaddata_sequencer_source     Sequencer type: NexteraPE, TruSeq2, TruSeq3 (default: NexteraPE)
          --kneaddata_threads <INT>        Threads for KneadData (default: 4)
          --kneaddata_processes <INT>      Processes for KneadData (default: 1)
          --kneaddata_time <TIME>          Process time (cluster only)
          --kneaddata_mem <MEM>            Memory for KneadData (default: 8 GB)
          --kneaddata_extra <STR>          Additional KneadData options

        TAXONOMIC_PROFILING:
          --metaphlan_db <DIR>             Directory for MetaPhlAn database
          --metaphlan_index <STR>          MetaPhlAn index (default: mpa_vJun23_CHOCOPhlAnSGB_202403)
          --metaphlan_nproc <INT>          Processes for MetaPhlAn (default: 4)
          --metaphlan_time <TIME>          Process time (cluster only)
          --metaphlan_mem <MEM>            Memory for MetaPhlAn (default: 16 GB)
          --metaphlan_extra <STR>          Additional MetaPhlAn options
          --metaphlan_extra_analysis       Estimate Shannon, Inverse Simpson, and Alpha diversity

        FUNCTIONAL_PROFILING:
          --humann_nucleotide_db <DIR>     HUMAnN nucleotide database directory
          --humann_protein_db <DIR>        HUMAnN protein database directory
          --humann_pathway_db <STR>        Pathway DB: metacyc or unipathways (default: metacyc)
          --humann_threads <INT>           Threads for HUMAnN (default: 4)
          --humann_time <TIME>             Process time (cluster only)
          --humann_mem <MEM>               Memory for HUMAnN (default: 16 GB)
          --humann_extra <STR>             Additional HUMAnN options

        Consensus pathway analysis:
          --goterm_db <DIR>                GOterms database directory
          --goterm_cpu <INT>               CPUs for GOterm (default: 2)
          --goterm_mem <MEM>               Memory for GOterm (default: 16 GB)
          --cpa_cpu <INT>                  CPUs for consensus pathway analysis (default: 2)
          --cpa_mem <MEM>                  Memory for consensus pathway analysis (default: 16 GB)

        Descriptive profiling analysis:
          --humann_renorm_units <STR>      Pathway abundance normalization: cpm (default) or relab
          --norm_path_cpu <INT>            CPUs for descriptive profiling (default: 2)
          --norm_path_mem <MEM>            Memory for descriptive profiling (default: 16 GB)
          --join_path_cpu <INT>            CPUs for join pathway (default: 1)
          --join_path_mem <MEM>            Memory for join pathway (default: 8 GB)
          --desc_cpu <INT>                 CPUs for descriptive analysis (default: 1)
          --desc_mem <MEM>                 Memory for descriptive analysis (default: 8 GB)
    """
    .stripIndent()
